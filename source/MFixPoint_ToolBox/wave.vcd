$date
	Wed Apr 08 20:17:23 2015
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module MFP_Adder_Arr $end
$var wire 64 ! In1Arr [63:0] $end
$var wire 64 " In2Arr [63:0] $end
$var wire 64 # OutArr [63:0] $end
$scope begin oparr[0] $end
$scope module a0 $end
$var wire 16 $ In1 [15:0] $end
$var wire 16 % In2 [15:0] $end
$var wire 1 & IsSameSign $end
$var wire 1 ' IsSignChanged $end
$var wire 16 ( Out [15:0] $end
$var wire 16 ) TestAdd [15:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin oparr[1] $end
$scope module a0 $end
$var wire 16 * In1 [15:0] $end
$var wire 16 + In2 [15:0] $end
$var wire 1 , IsSameSign $end
$var wire 1 - IsSignChanged $end
$var wire 16 . Out [15:0] $end
$var wire 16 / TestAdd [15:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin oparr[2] $end
$scope module a0 $end
$var wire 16 0 In1 [15:0] $end
$var wire 16 1 In2 [15:0] $end
$var wire 1 2 IsSameSign $end
$var wire 1 3 IsSignChanged $end
$var wire 16 4 Out [15:0] $end
$var wire 16 5 TestAdd [15:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin oparr[3] $end
$scope module a0 $end
$var wire 16 6 In1 [15:0] $end
$var wire 16 7 In2 [15:0] $end
$var wire 1 8 IsSameSign $end
$var wire 1 9 IsSignChanged $end
$var wire 16 : Out [15:0] $end
$var wire 16 ; TestAdd [15:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module MFP_MAC_Seq $end
$var wire 8 < In1 [7:0] $end
$var wire 8 = In2 [7:0] $end
$var wire 15 > acc_sum_pre [14:0] $end
$var wire 15 ? acc_sum_rounded [14:0] $end
$var wire 1 @ aclr $end
$var wire 1 A clock $end
$var wire 15 B product [14:0] $end
$var wire 15 C product_rounded [14:0] $end
$var reg 15 D acc_sum [14:0] $end
$scope module m1 $end
$var wire 8 E In1 [7:0] $end
$var wire 8 F In2 [7:0] $end
$var wire 15 G Out [14:0] $end
$var wire 15 H Out_ [14:0] $end
$scope module roun $end
$var wire 15 I in [14:0] $end
$var wire 15 J out [14:0] $end
$scope begin genblk4 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$var wire 8 K In1_s [7:0] $end
$var wire 8 L In2_s [7:0] $end
$var wire 15 M Out_s [14:0] $end
$upscope $end
$upscope $end
$scope module round_prod $end
$var wire 15 N in [14:0] $end
$var wire 15 O out [14:0] $end
$scope begin genblk4 $end
$upscope $end
$upscope $end
$scope module aS $end
$var wire 15 P In1 [14:0] $end
$var wire 15 Q In2 [14:0] $end
$var wire 1 R IsSameSign $end
$var wire 1 S IsSignChanged $end
$var wire 15 T Out [14:0] $end
$var wire 15 U TestAdd [14:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$scope module round_acc $end
$var wire 15 V in [14:0] $end
$var wire 15 W out [14:0] $end
$scope begin genblk4 $end
$upscope $end
$upscope $end
$upscope $end
$scope module MFP_MAC_symmetric_par $end
$var wire 64 X Coeff [63:0] $end
$var wire 128 Y In1Arr [127:0] $end
$var wire 72 Z In1ArrFold [71:0] $end
$var wire 72 [ In1ArrFold_stage [71:0] $end
$var wire 15 \ acc_sum_rounded [14:0] $end
$var wire 1 ] clk $end
$var wire 1 ^ en $end
$var wire 1 _ extrasum_roundedBit $end
$scope module RoW $end
$var wire 1 ] clk $end
$var wire 1 ^ en $end
$var wire 72 ` in [71:0] $end
$var wire 72 a out [71:0] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope module MACpH $end
$var wire 72 b In1Arr [71:0] $end
$var wire 64 c In2Arr [63:0] $end
$var wire 16 d acc_sum_rounded [15:0] $end
$var wire 1 ] clk $end
$var wire 1 ^ en $end
$var wire 128 e productArr_rounded [127:0] $end
$var wire 16 f productArr_roundedSum [15:0] $end
$var wire 128 g productArr_rounded_stage [127:0] $end
$scope module AMFP $end
$var wire 72 h In1Arr [71:0] $end
$var wire 64 i In2Arr [63:0] $end
$var wire 128 j OutArr [127:0] $end
$scope begin oparr[0] $end
$scope module m0 $end
$var wire 9 k In1 [8:0] $end
$var wire 8 l In2 [7:0] $end
$var wire 16 m Out [15:0] $end
$var wire 16 n Out_ [15:0] $end
$scope module roun $end
$var wire 16 o in [15:0] $end
$var wire 16 p out [15:0] $end
$scope begin genblk4 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$var wire 9 q In1_s [8:0] $end
$var wire 8 r In2_s [7:0] $end
$var wire 16 s Out_s [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin oparr[1] $end
$scope module m0 $end
$var wire 9 t In1 [8:0] $end
$var wire 8 u In2 [7:0] $end
$var wire 16 v Out [15:0] $end
$var wire 16 w Out_ [15:0] $end
$scope module roun $end
$var wire 16 x in [15:0] $end
$var wire 16 y out [15:0] $end
$scope begin genblk4 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$var wire 9 z In1_s [8:0] $end
$var wire 8 { In2_s [7:0] $end
$var wire 16 | Out_s [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin oparr[2] $end
$scope module m0 $end
$var wire 9 } In1 [8:0] $end
$var wire 8 ~ In2 [7:0] $end
$var wire 16 !" Out [15:0] $end
$var wire 16 "" Out_ [15:0] $end
$scope module roun $end
$var wire 16 #" in [15:0] $end
$var wire 16 $" out [15:0] $end
$scope begin genblk4 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$var wire 9 %" In1_s [8:0] $end
$var wire 8 &" In2_s [7:0] $end
$var wire 16 '" Out_s [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin oparr[3] $end
$scope module m0 $end
$var wire 9 (" In1 [8:0] $end
$var wire 8 )" In2 [7:0] $end
$var wire 16 *" Out [15:0] $end
$var wire 16 +" Out_ [15:0] $end
$scope module roun $end
$var wire 16 ," in [15:0] $end
$var wire 16 -" out [15:0] $end
$scope begin genblk4 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$var wire 9 ." In1_s [8:0] $end
$var wire 8 /" In2_s [7:0] $end
$var wire 16 0" Out_s [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin oparr[4] $end
$scope module m0 $end
$var wire 9 1" In1 [8:0] $end
$var wire 8 2" In2 [7:0] $end
$var wire 16 3" Out [15:0] $end
$var wire 16 4" Out_ [15:0] $end
$scope module roun $end
$var wire 16 5" in [15:0] $end
$var wire 16 6" out [15:0] $end
$scope begin genblk4 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$var wire 9 7" In1_s [8:0] $end
$var wire 8 8" In2_s [7:0] $end
$var wire 16 9" Out_s [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin oparr[5] $end
$scope module m0 $end
$var wire 9 :" In1 [8:0] $end
$var wire 8 ;" In2 [7:0] $end
$var wire 16 <" Out [15:0] $end
$var wire 16 =" Out_ [15:0] $end
$scope module roun $end
$var wire 16 >" in [15:0] $end
$var wire 16 ?" out [15:0] $end
$scope begin genblk4 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$var wire 9 @" In1_s [8:0] $end
$var wire 8 A" In2_s [7:0] $end
$var wire 16 B" Out_s [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin oparr[6] $end
$scope module m0 $end
$var wire 9 C" In1 [8:0] $end
$var wire 8 D" In2 [7:0] $end
$var wire 16 E" Out [15:0] $end
$var wire 16 F" Out_ [15:0] $end
$scope module roun $end
$var wire 16 G" in [15:0] $end
$var wire 16 H" out [15:0] $end
$scope begin genblk4 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$var wire 9 I" In1_s [8:0] $end
$var wire 8 J" In2_s [7:0] $end
$var wire 16 K" Out_s [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin oparr[7] $end
$scope module m0 $end
$var wire 9 L" In1 [8:0] $end
$var wire 8 M" In2 [7:0] $end
$var wire 16 N" Out [15:0] $end
$var wire 16 O" Out_ [15:0] $end
$scope module roun $end
$var wire 16 P" in [15:0] $end
$var wire 16 Q" out [15:0] $end
$scope begin genblk4 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$var wire 9 R" In1_s [8:0] $end
$var wire 8 S" In2_s [7:0] $end
$var wire 16 T" Out_s [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module RoW $end
$var wire 1 ] clk $end
$var wire 1 ^ en $end
$var wire 128 U" in [127:0] $end
$var wire 128 V" out [127:0] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope module ATFP $end
$var wire 128 W" DIn [127:0] $end
$var wire 16 X" Sum [15:0] $end
$var wire 16 Y" Sum_ [15:0] $end
$var wire 1 ] clk $end
$var wire 1 ^ en $end
$var wire 16 Z" subLevelSum1 [15:0] $end
$var wire 16 [" subLevelSum2 [15:0] $end
$scope module aS $end
$var wire 16 \" In1 [15:0] $end
$var wire 16 ]" In2 [15:0] $end
$var wire 1 ^" IsSameSign $end
$var wire 1 _" IsSignChanged $end
$var wire 16 `" Out [15:0] $end
$var wire 16 a" TestAdd [15:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$scope module RoW $end
$var wire 1 ] clk $end
$var wire 1 ^ en $end
$var wire 16 b" in [15:0] $end
$var wire 16 c" out [15:0] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$scope module ATI1 $end
$var wire 64 d" DIn [63:0] $end
$var wire 16 e" Sum [15:0] $end
$var wire 16 f" Sum_ [15:0] $end
$var wire 1 ] clk $end
$var wire 1 ^ en $end
$var wire 16 g" subLevelSum1 [15:0] $end
$var wire 16 h" subLevelSum2 [15:0] $end
$scope module aS $end
$var wire 16 i" In1 [15:0] $end
$var wire 16 j" In2 [15:0] $end
$var wire 1 k" IsSameSign $end
$var wire 1 l" IsSignChanged $end
$var wire 16 m" Out [15:0] $end
$var wire 16 n" TestAdd [15:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$scope module RoW $end
$var wire 1 ] clk $end
$var wire 1 ^ en $end
$var wire 16 o" in [15:0] $end
$var wire 16 p" out [15:0] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$scope module ATI1 $end
$var wire 32 q" DIn [31:0] $end
$var wire 16 r" Sum [15:0] $end
$var wire 16 s" Sum_ [15:0] $end
$var wire 1 ] clk $end
$var wire 1 ^ en $end
$var wire 16 t" subLevelSum1 [15:0] $end
$var wire 16 u" subLevelSum2 [15:0] $end
$scope module aS $end
$var wire 16 v" In1 [15:0] $end
$var wire 16 w" In2 [15:0] $end
$var wire 1 x" IsSameSign $end
$var wire 1 y" IsSignChanged $end
$var wire 16 z" Out [15:0] $end
$var wire 16 {" TestAdd [15:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$scope module RoW $end
$var wire 1 ] clk $end
$var wire 1 ^ en $end
$var wire 16 |" in [15:0] $end
$var wire 16 }" out [15:0] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk4 $end
$scope module ATI1 $end
$var wire 32 ~" DIn [31:0] $end
$var wire 16 !# Sum [15:0] $end
$var wire 16 "# Sum_ [15:0] $end
$var wire 1 ] clk $end
$var wire 1 ^ en $end
$var wire 16 ## subLevelSum1 [15:0] $end
$var wire 16 $# subLevelSum2 [15:0] $end
$scope module aS $end
$var wire 16 %# In1 [15:0] $end
$var wire 16 &# In2 [15:0] $end
$var wire 1 '# IsSameSign $end
$var wire 1 (# IsSignChanged $end
$var wire 16 )# Out [15:0] $end
$var wire 16 *# TestAdd [15:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$scope module RoW $end
$var wire 1 ] clk $end
$var wire 1 ^ en $end
$var wire 16 +# in [15:0] $end
$var wire 16 ,# out [15:0] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk3 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk4 $end
$scope module ATI1 $end
$var wire 64 -# DIn [63:0] $end
$var wire 16 .# Sum [15:0] $end
$var wire 16 /# Sum_ [15:0] $end
$var wire 1 ] clk $end
$var wire 1 ^ en $end
$var wire 16 0# subLevelSum1 [15:0] $end
$var wire 16 1# subLevelSum2 [15:0] $end
$scope module aS $end
$var wire 16 2# In1 [15:0] $end
$var wire 16 3# In2 [15:0] $end
$var wire 1 4# IsSameSign $end
$var wire 1 5# IsSignChanged $end
$var wire 16 6# Out [15:0] $end
$var wire 16 7# TestAdd [15:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$scope module RoW $end
$var wire 1 ] clk $end
$var wire 1 ^ en $end
$var wire 16 8# in [15:0] $end
$var wire 16 9# out [15:0] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$scope module ATI1 $end
$var wire 32 :# DIn [31:0] $end
$var wire 16 ;# Sum [15:0] $end
$var wire 16 <# Sum_ [15:0] $end
$var wire 1 ] clk $end
$var wire 1 ^ en $end
$var wire 16 =# subLevelSum1 [15:0] $end
$var wire 16 ># subLevelSum2 [15:0] $end
$scope module aS $end
$var wire 16 ?# In1 [15:0] $end
$var wire 16 @# In2 [15:0] $end
$var wire 1 A# IsSameSign $end
$var wire 1 B# IsSignChanged $end
$var wire 16 C# Out [15:0] $end
$var wire 16 D# TestAdd [15:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$scope module RoW $end
$var wire 1 ] clk $end
$var wire 1 ^ en $end
$var wire 16 E# in [15:0] $end
$var wire 16 F# out [15:0] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk4 $end
$scope module ATI1 $end
$var wire 32 G# DIn [31:0] $end
$var wire 16 H# Sum [15:0] $end
$var wire 16 I# Sum_ [15:0] $end
$var wire 1 ] clk $end
$var wire 1 ^ en $end
$var wire 16 J# subLevelSum1 [15:0] $end
$var wire 16 K# subLevelSum2 [15:0] $end
$scope module aS $end
$var wire 16 L# In1 [15:0] $end
$var wire 16 M# In2 [15:0] $end
$var wire 1 N# IsSameSign $end
$var wire 1 O# IsSignChanged $end
$var wire 16 P# Out [15:0] $end
$var wire 16 Q# TestAdd [15:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$scope module RoW $end
$var wire 1 ] clk $end
$var wire 1 ^ en $end
$var wire 16 R# in [15:0] $end
$var wire 16 S# out [15:0] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk3 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module round_acc $end
$var wire 16 T# in [15:0] $end
$var wire 16 U# out [15:0] $end
$scope begin genblk4 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin foldLoop[0] $end
$scope module aS $end
$var wire 8 V# In1 [7:0] $end
$var wire 8 W# In2 [7:0] $end
$var wire 1 X# IsSameSign $end
$var wire 1 Y# IsSignChanged $end
$var wire 9 Z# Out [8:0] $end
$var wire 9 [# TestAdd [8:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin foldLoop[1] $end
$scope module aS $end
$var wire 8 \# In1 [7:0] $end
$var wire 8 ]# In2 [7:0] $end
$var wire 1 ^# IsSameSign $end
$var wire 1 _# IsSignChanged $end
$var wire 9 `# Out [8:0] $end
$var wire 9 a# TestAdd [8:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin foldLoop[2] $end
$scope module aS $end
$var wire 8 b# In1 [7:0] $end
$var wire 8 c# In2 [7:0] $end
$var wire 1 d# IsSameSign $end
$var wire 1 e# IsSignChanged $end
$var wire 9 f# Out [8:0] $end
$var wire 9 g# TestAdd [8:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin foldLoop[3] $end
$scope module aS $end
$var wire 8 h# In1 [7:0] $end
$var wire 8 i# In2 [7:0] $end
$var wire 1 j# IsSameSign $end
$var wire 1 k# IsSignChanged $end
$var wire 9 l# Out [8:0] $end
$var wire 9 m# TestAdd [8:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin foldLoop[4] $end
$scope module aS $end
$var wire 8 n# In1 [7:0] $end
$var wire 8 o# In2 [7:0] $end
$var wire 1 p# IsSameSign $end
$var wire 1 q# IsSignChanged $end
$var wire 9 r# Out [8:0] $end
$var wire 9 s# TestAdd [8:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin foldLoop[5] $end
$scope module aS $end
$var wire 8 t# In1 [7:0] $end
$var wire 8 u# In2 [7:0] $end
$var wire 1 v# IsSameSign $end
$var wire 1 w# IsSignChanged $end
$var wire 9 x# Out [8:0] $end
$var wire 9 y# TestAdd [8:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin foldLoop[6] $end
$scope module aS $end
$var wire 8 z# In1 [7:0] $end
$var wire 8 {# In2 [7:0] $end
$var wire 1 |# IsSameSign $end
$var wire 1 }# IsSignChanged $end
$var wire 9 ~# Out [8:0] $end
$var wire 9 !$ TestAdd [8:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin foldLoop[7] $end
$scope module aS $end
$var wire 8 "$ In1 [7:0] $end
$var wire 8 #$ In2 [7:0] $end
$var wire 1 $$ IsSameSign $end
$var wire 1 %$ IsSignChanged $end
$var wire 9 &$ Out [8:0] $end
$var wire 9 '$ TestAdd [8:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module TB1 $end
$var wire 1 ($ ZZZ $end
$var wire 15 )$ satOut [14:0] $end
$var reg 1 *$ clk_ $end
$var integer 32 +$ counter [31:0] $end
$scope module Mul $end
$var wire 8 ,$ In1 [7:0] $end
$var wire 8 -$ In2 [7:0] $end
$var wire 8 .$ Out [7:0] $end
$var wire 15 /$ Out_ [14:0] $end
$scope module roun $end
$var wire 15 0$ in [14:0] $end
$var wire 8 1$ out [7:0] $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$var wire 8 2$ In1_s [7:0] $end
$var wire 8 3$ In2_s [7:0] $end
$var wire 15 4$ Out_s [14:0] $end
$upscope $end
$upscope $end
$scope module Muluns $end
$var wire 8 5$ In1 [7:0] $end
$var wire 8 6$ In2 [7:0] $end
$var wire 8 7$ Out [7:0] $end
$var wire 16 8$ Out_ [15:0] $end
$scope module roun $end
$var wire 16 9$ in [15:0] $end
$var wire 8 :$ out [7:0] $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope module Adder $end
$var wire 8 ;$ In1 [7:0] $end
$var wire 8 <$ In2 [7:0] $end
$var wire 1 =$ IsSameSign $end
$var wire 1 >$ IsSignChanged $end
$var wire 8 ?$ Out [7:0] $end
$var wire 8 @$ TestAdd [7:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$scope module AdderuS $end
$var wire 8 A$ In1 [7:0] $end
$var wire 8 B$ In2 [7:0] $end
$var wire 1 C$ IsSameSign $end
$var wire 1 D$ IsSignChanged $end
$var wire 8 E$ Out [7:0] $end
$var wire 8 F$ TestAdd [7:0] $end
$scope begin genblk1 $end
$var wire 8 G$ In2_ [7:0] $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$upscope $end
$scope module sat $end
$var wire 15 H$ dataIn [14:0] $end
$var wire 15 I$ dataOut [14:0] $end
$var wire 1 J$ sign $end
$scope begin genblk2 $end
$var wire 15 K$ Out [14:0] $end
$var wire 3 L$ Out_ [2:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100 L$
b111111111111100 K$
1J$
b111111111111100 I$
b111111110011100 H$
b1 G$
b0 F$
b0 E$
1D$
0C$
b1 B$
b11111111 A$
b0 @$
b0 ?$
0>$
0=$
b10000001 <$
b1111111 ;$
b1000000 :$
b100000000000000 9$
b100000000000000 8$
b1000000 7$
b10000000 6$
b10000000 5$
b100000000000000 4$
b10000000 3$
b10000000 2$
b10000000 1$
b100000000000000 0$
b100000000000000 /$
b10000000 .$
b10000000 -$
b10000000 ,$
b11111111111111111111111110011100 +$
0*$
b111111111111100 )$
0($
bx '$
bx &$
x%$
x$$
bz #$
bz "$
bx !$
bx ~#
x}#
x|#
bz {#
bz z#
bx y#
bx x#
xw#
xv#
bz u#
bz t#
bx s#
bx r#
xq#
xp#
bz o#
bz n#
bx m#
bx l#
xk#
xj#
bz i#
bz h#
bx g#
bx f#
xe#
xd#
bz c#
bz b#
bx a#
bx `#
x_#
x^#
bz ]#
bz \#
bx [#
bx Z#
xY#
xX#
bz W#
bz V#
bx U#
bx T#
bx S#
bx R#
bx Q#
bx P#
xO#
xN#
bx M#
bx L#
bx K#
bx J#
bx I#
bx H#
bx G#
bx F#
bx E#
bx D#
bx C#
xB#
xA#
bx @#
bx ?#
bx >#
bx =#
bx <#
bx ;#
bx :#
bx 9#
bx 8#
bx 7#
bx 6#
x5#
x4#
bx 3#
bx 2#
bx 1#
bx 0#
bx /#
bx .#
bx -#
bx ,#
bx +#
bx *#
bx )#
x(#
x'#
bx &#
bx %#
bx $#
bx ##
bx "#
bx !#
bx ~"
bx }"
bx |"
bx {"
bx z"
xy"
xx"
bx w"
bx v"
bx u"
bx t"
bx s"
bx r"
bx q"
bx p"
bx o"
bx n"
bx m"
xl"
xk"
bx j"
bx i"
bx h"
bx g"
bx f"
bx e"
bx d"
bx c"
bx b"
bx a"
bx `"
x_"
x^"
bx ]"
bx \"
bx ["
bx Z"
bx Y"
bx X"
bx W"
bx V"
bx U"
bx T"
bz S"
bx R"
bx Q"
bx P"
bx O"
bx N"
bz M"
bx L"
bx K"
bz J"
bx I"
bx H"
bx G"
bx F"
bx E"
bz D"
bx C"
bx B"
bz A"
bx @"
bx ?"
bx >"
bx ="
bx <"
bz ;"
bx :"
bx 9"
bz 8"
bx 7"
bx 6"
bx 5"
bx 4"
bx 3"
bz 2"
bx 1"
bx 0"
bz /"
bx ."
bx -"
bx ,"
bx +"
bx *"
bz )"
bx ("
bx '"
bz &"
bx %"
bx $"
bx #"
bx ""
bx !"
bz ~
bx }
bx |
bz {
bx z
bx y
bx x
bx w
bx v
bz u
bx t
bx s
bz r
bx q
bx p
bx o
bx n
bx m
bz l
bx k
bx j
bz i
bx h
bx g
bx f
bx e
bx d
bz c
bx b
bx a
bx `
x_
z^
z]
bx \
bx [
bx Z
bz Y
bz X
bx W
bx V
bx U
bx T
xS
xR
bx Q
bx P
bx O
bx N
bx M
bz L
bz K
bx J
bx I
bx H
bx G
bz F
bz E
bx D
bx C
bx B
zA
z@
bx ?
bx >
bz =
bz <
bx ;
bx :
x9
x8
bx 7
bx 6
bx 5
bx 4
x3
x2
bx 1
bx 0
bx /
bx .
x-
x,
bx +
bx *
bx )
bx (
x'
x&
bx %
bx $
bx #
bz "
bz !
$end
#2
b111111110011101 H$
b11111111111111111111111110011101 +$
1*$
#4
0*$
#6
b111111110011110 H$
b11111111111111111111111110011110 +$
1*$
#8
0*$
#10
b111111110011111 H$
b11111111111111111111111110011111 +$
1*$
#12
0*$
#14
b111111110100000 H$
b11111111111111111111111110100000 +$
1*$
#16
0*$
#18
b111111110100001 H$
b11111111111111111111111110100001 +$
1*$
#20
0*$
#22
b111111110100010 H$
b11111111111111111111111110100010 +$
1*$
#24
0*$
#26
b111111110100011 H$
b11111111111111111111111110100011 +$
1*$
#28
0*$
#30
b111111110100100 H$
b11111111111111111111111110100100 +$
1*$
#32
0*$
#34
b111111110100101 H$
b11111111111111111111111110100101 +$
1*$
#36
0*$
#38
b111111110100110 H$
b11111111111111111111111110100110 +$
1*$
#40
0*$
#42
b111111110100111 H$
b11111111111111111111111110100111 +$
1*$
#44
0*$
#46
b111111110101000 H$
b11111111111111111111111110101000 +$
1*$
#48
0*$
#50
b111111110101001 H$
b11111111111111111111111110101001 +$
1*$
#52
0*$
#54
b111111110101010 H$
b11111111111111111111111110101010 +$
1*$
#56
0*$
#58
b111111110101011 H$
b11111111111111111111111110101011 +$
1*$
#60
0*$
#62
b111111110101100 H$
b11111111111111111111111110101100 +$
1*$
#64
0*$
#66
b111111110101101 H$
b11111111111111111111111110101101 +$
1*$
#68
0*$
#70
b111111110101110 H$
b11111111111111111111111110101110 +$
1*$
#72
0*$
#74
b111111110101111 H$
b11111111111111111111111110101111 +$
1*$
#76
0*$
#78
b111111110110000 H$
b11111111111111111111111110110000 +$
1*$
#80
0*$
#82
b111111110110001 H$
b11111111111111111111111110110001 +$
1*$
#84
0*$
#86
b111111110110010 H$
b11111111111111111111111110110010 +$
1*$
#88
0*$
#90
b111111110110011 H$
b11111111111111111111111110110011 +$
1*$
#92
0*$
#94
b111111110110100 H$
b11111111111111111111111110110100 +$
1*$
#96
0*$
#98
b111111110110101 H$
b11111111111111111111111110110101 +$
1*$
#100
0*$
#102
b111111110110110 H$
b11111111111111111111111110110110 +$
1*$
#104
0*$
#106
b111111110110111 H$
b11111111111111111111111110110111 +$
1*$
#108
0*$
#110
b111111110111000 H$
b11111111111111111111111110111000 +$
1*$
#112
0*$
#114
b111111110111001 H$
b11111111111111111111111110111001 +$
1*$
#116
0*$
#118
b111111110111010 H$
b11111111111111111111111110111010 +$
1*$
#120
0*$
#122
b111111110111011 H$
b11111111111111111111111110111011 +$
1*$
#124
0*$
#126
b111111110111100 H$
b11111111111111111111111110111100 +$
1*$
#128
0*$
#130
b111111110111101 H$
b11111111111111111111111110111101 +$
1*$
#132
0*$
#134
b111111110111110 H$
b11111111111111111111111110111110 +$
1*$
#136
0*$
#138
b111111110111111 H$
b11111111111111111111111110111111 +$
1*$
#140
0*$
#142
b111111111000000 H$
b11111111111111111111111111000000 +$
1*$
#144
0*$
#146
b111111111000001 H$
b11111111111111111111111111000001 +$
1*$
#148
0*$
#150
b111111111000010 H$
b11111111111111111111111111000010 +$
1*$
#152
0*$
#154
b111111111000011 H$
b11111111111111111111111111000011 +$
1*$
#156
0*$
#158
b111111111000100 H$
b11111111111111111111111111000100 +$
1*$
#160
0*$
#162
b111111111000101 H$
b11111111111111111111111111000101 +$
1*$
#164
0*$
#166
b111111111000110 H$
b11111111111111111111111111000110 +$
1*$
#168
0*$
#170
b111111111000111 H$
b11111111111111111111111111000111 +$
1*$
#172
0*$
#174
b111111111001000 H$
b11111111111111111111111111001000 +$
1*$
#176
0*$
#178
b111111111001001 H$
b11111111111111111111111111001001 +$
1*$
#180
0*$
#182
b111111111001010 H$
b11111111111111111111111111001010 +$
1*$
#184
0*$
#186
b111111111001011 H$
b11111111111111111111111111001011 +$
1*$
#188
0*$
#190
b111111111001100 H$
b11111111111111111111111111001100 +$
1*$
#192
0*$
#194
b111111111001101 H$
b11111111111111111111111111001101 +$
1*$
#196
0*$
#198
b111111111001110 H$
b11111111111111111111111111001110 +$
1*$
#200
0*$
#202
b111111111001111 H$
b11111111111111111111111111001111 +$
1*$
#204
0*$
#206
b111111111010000 H$
b11111111111111111111111111010000 +$
1*$
#208
0*$
#210
b111111111010001 H$
b11111111111111111111111111010001 +$
1*$
#212
0*$
#214
b111111111010010 H$
b11111111111111111111111111010010 +$
1*$
#216
0*$
#218
b111111111010011 H$
b11111111111111111111111111010011 +$
1*$
#220
0*$
#222
b111111111010100 H$
b11111111111111111111111111010100 +$
1*$
#224
0*$
#226
b111111111010101 H$
b11111111111111111111111111010101 +$
1*$
#228
0*$
#230
b111111111010110 H$
b11111111111111111111111111010110 +$
1*$
#232
0*$
#234
b111111111010111 H$
b11111111111111111111111111010111 +$
1*$
#236
0*$
#238
b111111111011000 H$
b11111111111111111111111111011000 +$
1*$
#240
0*$
#242
b111111111011001 H$
b11111111111111111111111111011001 +$
1*$
#244
0*$
#246
b111111111011010 H$
b11111111111111111111111111011010 +$
1*$
#248
0*$
#250
b111111111011011 H$
b11111111111111111111111111011011 +$
1*$
#252
0*$
#254
b111111111011100 H$
b11111111111111111111111111011100 +$
1*$
#256
0*$
#258
b111111111011101 H$
b11111111111111111111111111011101 +$
1*$
#260
0*$
#262
b111111111011110 H$
b11111111111111111111111111011110 +$
1*$
#264
0*$
#266
b111111111011111 H$
b11111111111111111111111111011111 +$
1*$
#268
0*$
#270
b111111111100000 H$
b11111111111111111111111111100000 +$
1*$
#272
0*$
#274
b111111111100001 H$
b11111111111111111111111111100001 +$
1*$
#276
0*$
#278
b111111111100010 H$
b11111111111111111111111111100010 +$
1*$
#280
0*$
#282
b111111111100011 H$
b11111111111111111111111111100011 +$
1*$
#284
0*$
#286
b111111111100100 H$
b11111111111111111111111111100100 +$
1*$
#288
0*$
#290
b111111111100101 H$
b11111111111111111111111111100101 +$
1*$
#292
0*$
#294
b111111111100110 H$
b11111111111111111111111111100110 +$
1*$
#296
0*$
#298
b111111111100111 H$
b11111111111111111111111111100111 +$
1*$
#300
0*$
#302
b111111111101000 H$
b11111111111111111111111111101000 +$
1*$
#304
0*$
#306
b111111111101001 H$
b11111111111111111111111111101001 +$
1*$
#308
0*$
#310
b111111111101010 H$
b11111111111111111111111111101010 +$
1*$
#312
0*$
#314
b111111111101011 H$
b11111111111111111111111111101011 +$
1*$
#316
0*$
#318
b111111111101100 H$
b11111111111111111111111111101100 +$
1*$
#320
0*$
#322
b111111111101101 H$
b11111111111111111111111111101101 +$
1*$
#324
0*$
#326
b111111111101110 H$
b11111111111111111111111111101110 +$
1*$
#328
0*$
#330
b111111111101111 H$
b11111111111111111111111111101111 +$
1*$
#332
0*$
#334
b111111111110000 H$
b11111111111111111111111111110000 +$
1*$
#336
0*$
#338
b111111111110001 H$
b11111111111111111111111111110001 +$
1*$
#340
0*$
#342
b111111111110010 H$
b11111111111111111111111111110010 +$
1*$
#344
0*$
#346
b111111111110011 H$
b11111111111111111111111111110011 +$
1*$
#348
0*$
#350
b111111111110100 H$
b11111111111111111111111111110100 +$
1*$
#352
0*$
#354
b111111111110101 H$
b11111111111111111111111111110101 +$
1*$
#356
0*$
#358
b111111111110110 H$
b11111111111111111111111111110110 +$
1*$
#360
0*$
#362
b111111111110111 H$
b11111111111111111111111111110111 +$
1*$
#364
0*$
#366
b111111111111000 H$
b11111111111111111111111111111000 +$
1*$
#368
0*$
#370
b111111111111001 H$
b11111111111111111111111111111001 +$
1*$
#372
0*$
#374
b111111111111010 H$
b11111111111111111111111111111010 +$
1*$
#376
0*$
#378
b111111111111011 H$
b11111111111111111111111111111011 +$
1*$
#380
0*$
#382
b111111111111100 H$
b11111111111111111111111111111100 +$
1*$
#384
0*$
#386
b101 L$
b111111111111101 K$
b111111111111101 )$
b111111111111101 I$
b111111111111101 H$
b11111111111111111111111111111101 +$
1*$
#388
0*$
#390
b110 L$
b111111111111110 K$
b111111111111110 )$
b111111111111110 I$
b111111111111110 H$
b11111111111111111111111111111110 +$
1*$
#392
0*$
#394
b111 L$
b111111111111111 K$
b111111111111111 )$
b111111111111111 I$
b111111111111111 H$
b11111111111111111111111111111111 +$
1*$
#396
0*$
#398
b0 L$
b0 K$
b0 )$
b0 I$
0J$
b0 H$
b0 +$
1*$
#400
0*$
#402
b1 L$
b1 K$
b1 )$
b1 I$
b1 H$
b1 +$
1*$
#404
0*$
#406
b10 L$
b10 K$
b10 )$
b10 I$
b10 H$
b10 +$
1*$
#408
0*$
#410
b11 L$
b11 K$
b11 )$
b11 I$
b11 H$
b11 +$
1*$
#412
0*$
#414
b100 H$
b100 +$
1*$
#416
0*$
#418
b101 H$
b101 +$
1*$
#420
0*$
#422
b110 H$
b110 +$
1*$
#424
0*$
#426
b111 H$
b111 +$
1*$
#428
0*$
#430
b1000 H$
b1000 +$
1*$
#432
0*$
#434
b1001 H$
b1001 +$
1*$
#436
0*$
#438
b1010 H$
b1010 +$
1*$
#440
0*$
#442
b1011 H$
b1011 +$
1*$
#444
0*$
#446
b1100 H$
b1100 +$
1*$
#448
0*$
#450
b1101 H$
b1101 +$
1*$
#452
0*$
#454
b1110 H$
b1110 +$
1*$
#456
0*$
#458
b1111 H$
b1111 +$
1*$
#460
0*$
#462
b10000 H$
b10000 +$
1*$
#464
0*$
#466
b10001 H$
b10001 +$
1*$
#468
0*$
#470
b10010 H$
b10010 +$
1*$
#472
0*$
#474
b10011 H$
b10011 +$
1*$
#476
0*$
#478
b10100 H$
b10100 +$
1*$
#480
0*$
#482
b10101 H$
b10101 +$
1*$
#484
0*$
#486
b10110 H$
b10110 +$
1*$
#488
0*$
#490
b10111 H$
b10111 +$
1*$
#492
0*$
#494
b11000 H$
b11000 +$
1*$
#496
0*$
#498
b11001 H$
b11001 +$
1*$
#500
0*$
#502
b11010 H$
b11010 +$
1*$
#504
0*$
#506
b11011 H$
b11011 +$
1*$
#508
0*$
#510
b11100 H$
b11100 +$
1*$
#512
0*$
#514
b11101 H$
b11101 +$
1*$
#516
0*$
#518
b11110 H$
b11110 +$
1*$
#520
0*$
#522
b11111 H$
b11111 +$
1*$
#524
0*$
#526
b100000 H$
b100000 +$
1*$
#528
0*$
#530
b100001 H$
b100001 +$
1*$
#532
0*$
#534
b100010 H$
b100010 +$
1*$
#536
0*$
#538
b100011 H$
b100011 +$
1*$
#540
0*$
#542
b100100 H$
b100100 +$
1*$
#544
0*$
#546
b100101 H$
b100101 +$
1*$
#548
0*$
#550
b100110 H$
b100110 +$
1*$
#552
0*$
#554
b100111 H$
b100111 +$
1*$
#556
0*$
#558
b101000 H$
b101000 +$
1*$
#560
0*$
#562
b101001 H$
b101001 +$
1*$
#564
0*$
#566
b101010 H$
b101010 +$
1*$
#568
0*$
#570
b101011 H$
b101011 +$
1*$
#572
0*$
#574
b101100 H$
b101100 +$
1*$
#576
0*$
#578
b101101 H$
b101101 +$
1*$
#580
0*$
#582
b101110 H$
b101110 +$
1*$
#584
0*$
#586
b101111 H$
b101111 +$
1*$
#588
0*$
#590
b110000 H$
b110000 +$
1*$
#592
0*$
#594
b110001 H$
b110001 +$
1*$
#596
0*$
#598
b110010 H$
b110010 +$
1*$
#600
0*$
#602
b110011 H$
b110011 +$
1*$
#604
0*$
#606
b110100 H$
b110100 +$
1*$
#608
0*$
#610
b110101 H$
b110101 +$
1*$
#612
0*$
#614
b110110 H$
b110110 +$
1*$
#616
0*$
#618
b110111 H$
b110111 +$
1*$
#620
0*$
#622
b111000 H$
b111000 +$
1*$
#624
0*$
#626
b111001 H$
b111001 +$
1*$
#628
0*$
#630
b111010 H$
b111010 +$
1*$
#632
0*$
#634
b111011 H$
b111011 +$
1*$
#636
0*$
#638
b111100 H$
b111100 +$
1*$
#640
0*$
#642
b111101 H$
b111101 +$
1*$
#644
0*$
#646
b111110 H$
b111110 +$
1*$
#648
0*$
#650
b111111 H$
b111111 +$
1*$
#652
0*$
#654
b1000000 H$
b1000000 +$
1*$
#656
0*$
#658
b1000001 H$
b1000001 +$
1*$
#660
0*$
#662
b1000010 H$
b1000010 +$
1*$
#664
0*$
#666
b1000011 H$
b1000011 +$
1*$
#668
0*$
#670
b1000100 H$
b1000100 +$
1*$
#672
0*$
#674
b1000101 H$
b1000101 +$
1*$
#676
0*$
#678
b1000110 H$
b1000110 +$
1*$
#680
0*$
#682
b1000111 H$
b1000111 +$
1*$
#684
0*$
#686
b1001000 H$
b1001000 +$
1*$
#688
0*$
#690
b1001001 H$
b1001001 +$
1*$
#692
0*$
#694
b1001010 H$
b1001010 +$
1*$
#696
0*$
#698
b1001011 H$
b1001011 +$
1*$
#700
0*$
#702
b1001100 H$
b1001100 +$
1*$
#704
0*$
#706
b1001101 H$
b1001101 +$
1*$
#708
0*$
#710
b1001110 H$
b1001110 +$
1*$
#712
0*$
#714
b1001111 H$
b1001111 +$
1*$
#716
0*$
#718
b1010000 H$
b1010000 +$
1*$
#720
0*$
#722
b1010001 H$
b1010001 +$
1*$
#724
0*$
#726
b1010010 H$
b1010010 +$
1*$
#728
0*$
#730
b1010011 H$
b1010011 +$
1*$
#732
0*$
#734
b1010100 H$
b1010100 +$
1*$
#736
0*$
#738
b1010101 H$
b1010101 +$
1*$
#740
0*$
#742
b1010110 H$
b1010110 +$
1*$
#744
0*$
#746
b1010111 H$
b1010111 +$
1*$
#748
0*$
#750
b1011000 H$
b1011000 +$
1*$
#752
0*$
#754
b1011001 H$
b1011001 +$
1*$
#756
0*$
#758
b1011010 H$
b1011010 +$
1*$
#760
0*$
#762
b1011011 H$
b1011011 +$
1*$
#764
0*$
#766
b1011100 H$
b1011100 +$
1*$
#768
0*$
#770
b1011101 H$
b1011101 +$
1*$
#772
0*$
#774
b1011110 H$
b1011110 +$
1*$
#776
0*$
#778
b1011111 H$
b1011111 +$
1*$
#780
0*$
#782
b1100000 H$
b1100000 +$
1*$
#784
0*$
#786
b1100001 H$
b1100001 +$
1*$
#788
0*$
#790
b1100010 H$
b1100010 +$
1*$
#792
0*$
#794
b1100011 H$
b1100011 +$
1*$
#796
0*$
#798
b1100100 H$
b1100100 +$
1*$
#800
0*$
#802
b1100101 H$
b1100101 +$
1*$
#804
0*$
#806
b1100110 H$
b1100110 +$
1*$
#808
0*$
#810
b1100111 H$
b1100111 +$
1*$
#812
0*$
#814
b1101000 H$
b1101000 +$
1*$
#816
0*$
#818
b1101001 H$
b1101001 +$
1*$
#820
0*$
#822
b1101010 H$
b1101010 +$
1*$
#824
0*$
#826
b1101011 H$
b1101011 +$
1*$
#828
0*$
#830
b1101100 H$
b1101100 +$
1*$
#832
0*$
#834
b1101101 H$
b1101101 +$
1*$
#836
0*$
#838
b1101110 H$
b1101110 +$
1*$
#840
0*$
#842
b1101111 H$
b1101111 +$
1*$
#844
0*$
#846
b1110000 H$
b1110000 +$
1*$
#848
0*$
#850
b1110001 H$
b1110001 +$
1*$
#852
0*$
#854
b1110010 H$
b1110010 +$
1*$
#856
0*$
#858
b1110011 H$
b1110011 +$
1*$
#860
0*$
#862
b1110100 H$
b1110100 +$
1*$
#864
0*$
#866
b1110101 H$
b1110101 +$
1*$
#868
0*$
#870
b1110110 H$
b1110110 +$
1*$
#872
0*$
#874
b1110111 H$
b1110111 +$
1*$
#876
0*$
#878
b1111000 H$
b1111000 +$
1*$
#880
0*$
#882
b1111001 H$
b1111001 +$
1*$
#884
0*$
#886
b1111010 H$
b1111010 +$
1*$
#888
0*$
#890
b1111011 H$
b1111011 +$
1*$
#892
0*$
#894
b1111100 H$
b1111100 +$
1*$
#896
0*$
#898
b1111101 H$
b1111101 +$
1*$
#900
0*$
#902
b1111110 H$
b1111110 +$
1*$
#904
0*$
#906
b1111111 H$
b1111111 +$
1*$
#908
0*$
#910
b10000000 H$
b10000000 +$
1*$
#912
0*$
#914
b10000001 H$
b10000001 +$
1*$
#916
0*$
#918
b10000010 H$
b10000010 +$
1*$
#920
0*$
#922
b10000011 H$
b10000011 +$
1*$
#924
0*$
#926
b10000100 H$
b10000100 +$
1*$
#928
0*$
#930
b10000101 H$
b10000101 +$
1*$
#932
0*$
#934
b10000110 H$
b10000110 +$
1*$
#936
0*$
#938
b10000111 H$
b10000111 +$
1*$
#940
0*$
#942
b10001000 H$
b10001000 +$
1*$
#944
0*$
#946
b10001001 H$
b10001001 +$
1*$
#948
0*$
#950
b10001010 H$
b10001010 +$
1*$
#952
0*$
#954
b10001011 H$
b10001011 +$
1*$
#956
0*$
#958
b10001100 H$
b10001100 +$
1*$
#960
0*$
#962
b10001101 H$
b10001101 +$
1*$
#964
0*$
#966
b10001110 H$
b10001110 +$
1*$
#968
0*$
#970
b10001111 H$
b10001111 +$
1*$
#972
0*$
#974
b10010000 H$
b10010000 +$
1*$
#976
0*$
#978
b10010001 H$
b10010001 +$
1*$
#980
0*$
#982
b10010010 H$
b10010010 +$
1*$
#984
0*$
#986
b10010011 H$
b10010011 +$
1*$
#988
0*$
#990
b10010100 H$
b10010100 +$
1*$
#992
0*$
#994
b10010101 H$
b10010101 +$
1*$
#996
0*$
#998
b10010110 H$
b10010110 +$
1*$
#1000
0*$
#1002
b10010111 H$
b10010111 +$
1*$
#1004
0*$
#1006
b10011000 H$
b10011000 +$
1*$
#1008
0*$
#1010
b10011001 H$
b10011001 +$
1*$
#1012
0*$
#1014
b10011010 H$
b10011010 +$
1*$
#1016
0*$
#1018
b10011011 H$
b10011011 +$
1*$
#1020
0*$
#1022
b10011100 H$
b10011100 +$
1*$
#1024
0*$
