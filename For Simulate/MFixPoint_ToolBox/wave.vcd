$date
	Wed Apr 15 00:09:51 2015
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module MFP_Abs $end
$var wire 8 ! dataIn [7:0] $end
$var wire 4 " dataOut [3:0] $end
$upscope $end
$scope module MFP_Adder_Arr $end
$var wire 64 # In1Arr [63:0] $end
$var wire 64 $ In2Arr [63:0] $end
$var wire 64 % OutArr [63:0] $end
$scope begin oparr[0] $end
$scope module a0 $end
$var wire 16 & In1 [15:0] $end
$var wire 16 ' In2 [15:0] $end
$var wire 1 ( IsSameSign $end
$var wire 1 ) IsSignChanged $end
$var wire 16 * Out [15:0] $end
$var wire 16 + TestAdd [15:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin oparr[1] $end
$scope module a0 $end
$var wire 16 , In1 [15:0] $end
$var wire 16 - In2 [15:0] $end
$var wire 1 . IsSameSign $end
$var wire 1 / IsSignChanged $end
$var wire 16 0 Out [15:0] $end
$var wire 16 1 TestAdd [15:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin oparr[2] $end
$scope module a0 $end
$var wire 16 2 In1 [15:0] $end
$var wire 16 3 In2 [15:0] $end
$var wire 1 4 IsSameSign $end
$var wire 1 5 IsSignChanged $end
$var wire 16 6 Out [15:0] $end
$var wire 16 7 TestAdd [15:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin oparr[3] $end
$scope module a0 $end
$var wire 16 8 In1 [15:0] $end
$var wire 16 9 In2 [15:0] $end
$var wire 1 : IsSameSign $end
$var wire 1 ; IsSignChanged $end
$var wire 16 < Out [15:0] $end
$var wire 16 = TestAdd [15:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module MFP_MAC_Seq $end
$var wire 8 > In1 [7:0] $end
$var wire 8 ? In2 [7:0] $end
$var wire 15 @ acc_sum_pre [14:0] $end
$var wire 15 A acc_sum_rounded [14:0] $end
$var wire 1 B aclr $end
$var wire 1 C clock $end
$var wire 15 D product [14:0] $end
$var wire 15 E product_rounded [14:0] $end
$var reg 15 F acc_sum [14:0] $end
$scope module m1 $end
$var wire 8 G In1 [7:0] $end
$var wire 8 H In2 [7:0] $end
$var wire 15 I Out [14:0] $end
$var wire 15 J Out_ [14:0] $end
$scope module roun $end
$var wire 15 K in [14:0] $end
$var wire 15 L out [14:0] $end
$scope begin genblk4 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$var wire 8 M In1_s [7:0] $end
$var wire 8 N In2_s [7:0] $end
$var wire 15 O Out_s [14:0] $end
$upscope $end
$upscope $end
$scope module round_prod $end
$var wire 15 P in [14:0] $end
$var wire 15 Q out [14:0] $end
$scope begin genblk4 $end
$upscope $end
$upscope $end
$scope module aS $end
$var wire 15 R In1 [14:0] $end
$var wire 15 S In2 [14:0] $end
$var wire 1 T IsSameSign $end
$var wire 1 U IsSignChanged $end
$var wire 15 V Out [14:0] $end
$var wire 15 W TestAdd [14:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$scope module round_acc $end
$var wire 15 X in [14:0] $end
$var wire 15 Y out [14:0] $end
$scope begin genblk4 $end
$upscope $end
$upscope $end
$upscope $end
$scope module MFP_MAC_symmetric_par $end
$var wire 64 Z Coeff [63:0] $end
$var wire 128 [ In1Arr [127:0] $end
$var wire 72 \ In1ArrFold [71:0] $end
$var wire 72 ] In1ArrFold_stage [71:0] $end
$var wire 15 ^ acc_sum_rounded [14:0] $end
$var wire 1 _ clk $end
$var wire 1 ` en $end
$var wire 1 a extrasum_roundedBit $end
$scope module RoW $end
$var wire 1 _ clk $end
$var wire 1 ` en $end
$var wire 72 b in [71:0] $end
$var wire 72 c out [71:0] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope module MACpH $end
$var wire 72 d In1Arr [71:0] $end
$var wire 64 e In2Arr [63:0] $end
$var wire 16 f acc_sum_rounded [15:0] $end
$var wire 1 _ clk $end
$var wire 1 ` en $end
$var wire 128 g productArr_rounded [127:0] $end
$var wire 16 h productArr_roundedSum [15:0] $end
$var wire 128 i productArr_rounded_stage [127:0] $end
$scope module AMFP $end
$var wire 72 j In1Arr [71:0] $end
$var wire 64 k In2Arr [63:0] $end
$var wire 128 l OutArr [127:0] $end
$scope begin oparr[0] $end
$scope module m0 $end
$var wire 9 m In1 [8:0] $end
$var wire 8 n In2 [7:0] $end
$var wire 16 o Out [15:0] $end
$var wire 16 p Out_ [15:0] $end
$scope module roun $end
$var wire 16 q in [15:0] $end
$var wire 16 r out [15:0] $end
$scope begin genblk4 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$var wire 9 s In1_s [8:0] $end
$var wire 8 t In2_s [7:0] $end
$var wire 16 u Out_s [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin oparr[1] $end
$scope module m0 $end
$var wire 9 v In1 [8:0] $end
$var wire 8 w In2 [7:0] $end
$var wire 16 x Out [15:0] $end
$var wire 16 y Out_ [15:0] $end
$scope module roun $end
$var wire 16 z in [15:0] $end
$var wire 16 { out [15:0] $end
$scope begin genblk4 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$var wire 9 | In1_s [8:0] $end
$var wire 8 } In2_s [7:0] $end
$var wire 16 ~ Out_s [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin oparr[2] $end
$scope module m0 $end
$var wire 9 !" In1 [8:0] $end
$var wire 8 "" In2 [7:0] $end
$var wire 16 #" Out [15:0] $end
$var wire 16 $" Out_ [15:0] $end
$scope module roun $end
$var wire 16 %" in [15:0] $end
$var wire 16 &" out [15:0] $end
$scope begin genblk4 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$var wire 9 '" In1_s [8:0] $end
$var wire 8 (" In2_s [7:0] $end
$var wire 16 )" Out_s [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin oparr[3] $end
$scope module m0 $end
$var wire 9 *" In1 [8:0] $end
$var wire 8 +" In2 [7:0] $end
$var wire 16 ," Out [15:0] $end
$var wire 16 -" Out_ [15:0] $end
$scope module roun $end
$var wire 16 ." in [15:0] $end
$var wire 16 /" out [15:0] $end
$scope begin genblk4 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$var wire 9 0" In1_s [8:0] $end
$var wire 8 1" In2_s [7:0] $end
$var wire 16 2" Out_s [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin oparr[4] $end
$scope module m0 $end
$var wire 9 3" In1 [8:0] $end
$var wire 8 4" In2 [7:0] $end
$var wire 16 5" Out [15:0] $end
$var wire 16 6" Out_ [15:0] $end
$scope module roun $end
$var wire 16 7" in [15:0] $end
$var wire 16 8" out [15:0] $end
$scope begin genblk4 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$var wire 9 9" In1_s [8:0] $end
$var wire 8 :" In2_s [7:0] $end
$var wire 16 ;" Out_s [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin oparr[5] $end
$scope module m0 $end
$var wire 9 <" In1 [8:0] $end
$var wire 8 =" In2 [7:0] $end
$var wire 16 >" Out [15:0] $end
$var wire 16 ?" Out_ [15:0] $end
$scope module roun $end
$var wire 16 @" in [15:0] $end
$var wire 16 A" out [15:0] $end
$scope begin genblk4 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$var wire 9 B" In1_s [8:0] $end
$var wire 8 C" In2_s [7:0] $end
$var wire 16 D" Out_s [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin oparr[6] $end
$scope module m0 $end
$var wire 9 E" In1 [8:0] $end
$var wire 8 F" In2 [7:0] $end
$var wire 16 G" Out [15:0] $end
$var wire 16 H" Out_ [15:0] $end
$scope module roun $end
$var wire 16 I" in [15:0] $end
$var wire 16 J" out [15:0] $end
$scope begin genblk4 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$var wire 9 K" In1_s [8:0] $end
$var wire 8 L" In2_s [7:0] $end
$var wire 16 M" Out_s [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin oparr[7] $end
$scope module m0 $end
$var wire 9 N" In1 [8:0] $end
$var wire 8 O" In2 [7:0] $end
$var wire 16 P" Out [15:0] $end
$var wire 16 Q" Out_ [15:0] $end
$scope module roun $end
$var wire 16 R" in [15:0] $end
$var wire 16 S" out [15:0] $end
$scope begin genblk4 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$var wire 9 T" In1_s [8:0] $end
$var wire 8 U" In2_s [7:0] $end
$var wire 16 V" Out_s [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module RoW $end
$var wire 1 _ clk $end
$var wire 1 ` en $end
$var wire 128 W" in [127:0] $end
$var wire 128 X" out [127:0] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope module ATFP $end
$var wire 128 Y" DIn [127:0] $end
$var wire 16 Z" Sum [15:0] $end
$var wire 16 [" Sum_ [15:0] $end
$var wire 1 _ clk $end
$var wire 1 ` en $end
$var wire 16 \" subLevelSum1 [15:0] $end
$var wire 16 ]" subLevelSum2 [15:0] $end
$scope module aS $end
$var wire 16 ^" In1 [15:0] $end
$var wire 16 _" In2 [15:0] $end
$var wire 1 `" IsSameSign $end
$var wire 1 a" IsSignChanged $end
$var wire 16 b" Out [15:0] $end
$var wire 16 c" TestAdd [15:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$scope module RoW $end
$var wire 1 _ clk $end
$var wire 1 ` en $end
$var wire 16 d" in [15:0] $end
$var wire 16 e" out [15:0] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$scope module ATI1 $end
$var wire 64 f" DIn [63:0] $end
$var wire 16 g" Sum [15:0] $end
$var wire 16 h" Sum_ [15:0] $end
$var wire 1 _ clk $end
$var wire 1 ` en $end
$var wire 16 i" subLevelSum1 [15:0] $end
$var wire 16 j" subLevelSum2 [15:0] $end
$scope module aS $end
$var wire 16 k" In1 [15:0] $end
$var wire 16 l" In2 [15:0] $end
$var wire 1 m" IsSameSign $end
$var wire 1 n" IsSignChanged $end
$var wire 16 o" Out [15:0] $end
$var wire 16 p" TestAdd [15:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$scope module RoW $end
$var wire 1 _ clk $end
$var wire 1 ` en $end
$var wire 16 q" in [15:0] $end
$var wire 16 r" out [15:0] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$scope module ATI1 $end
$var wire 32 s" DIn [31:0] $end
$var wire 16 t" Sum [15:0] $end
$var wire 16 u" Sum_ [15:0] $end
$var wire 1 _ clk $end
$var wire 1 ` en $end
$var wire 16 v" subLevelSum1 [15:0] $end
$var wire 16 w" subLevelSum2 [15:0] $end
$scope module aS $end
$var wire 16 x" In1 [15:0] $end
$var wire 16 y" In2 [15:0] $end
$var wire 1 z" IsSameSign $end
$var wire 1 {" IsSignChanged $end
$var wire 16 |" Out [15:0] $end
$var wire 16 }" TestAdd [15:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$scope module RoW $end
$var wire 1 _ clk $end
$var wire 1 ` en $end
$var wire 16 ~" in [15:0] $end
$var wire 16 !# out [15:0] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk4 $end
$scope module ATI1 $end
$var wire 32 "# DIn [31:0] $end
$var wire 16 ## Sum [15:0] $end
$var wire 16 $# Sum_ [15:0] $end
$var wire 1 _ clk $end
$var wire 1 ` en $end
$var wire 16 %# subLevelSum1 [15:0] $end
$var wire 16 &# subLevelSum2 [15:0] $end
$scope module aS $end
$var wire 16 '# In1 [15:0] $end
$var wire 16 (# In2 [15:0] $end
$var wire 1 )# IsSameSign $end
$var wire 1 *# IsSignChanged $end
$var wire 16 +# Out [15:0] $end
$var wire 16 ,# TestAdd [15:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$scope module RoW $end
$var wire 1 _ clk $end
$var wire 1 ` en $end
$var wire 16 -# in [15:0] $end
$var wire 16 .# out [15:0] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk3 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk4 $end
$scope module ATI1 $end
$var wire 64 /# DIn [63:0] $end
$var wire 16 0# Sum [15:0] $end
$var wire 16 1# Sum_ [15:0] $end
$var wire 1 _ clk $end
$var wire 1 ` en $end
$var wire 16 2# subLevelSum1 [15:0] $end
$var wire 16 3# subLevelSum2 [15:0] $end
$scope module aS $end
$var wire 16 4# In1 [15:0] $end
$var wire 16 5# In2 [15:0] $end
$var wire 1 6# IsSameSign $end
$var wire 1 7# IsSignChanged $end
$var wire 16 8# Out [15:0] $end
$var wire 16 9# TestAdd [15:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$scope module RoW $end
$var wire 1 _ clk $end
$var wire 1 ` en $end
$var wire 16 :# in [15:0] $end
$var wire 16 ;# out [15:0] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$scope module ATI1 $end
$var wire 32 <# DIn [31:0] $end
$var wire 16 =# Sum [15:0] $end
$var wire 16 ># Sum_ [15:0] $end
$var wire 1 _ clk $end
$var wire 1 ` en $end
$var wire 16 ?# subLevelSum1 [15:0] $end
$var wire 16 @# subLevelSum2 [15:0] $end
$scope module aS $end
$var wire 16 A# In1 [15:0] $end
$var wire 16 B# In2 [15:0] $end
$var wire 1 C# IsSameSign $end
$var wire 1 D# IsSignChanged $end
$var wire 16 E# Out [15:0] $end
$var wire 16 F# TestAdd [15:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$scope module RoW $end
$var wire 1 _ clk $end
$var wire 1 ` en $end
$var wire 16 G# in [15:0] $end
$var wire 16 H# out [15:0] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk3 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk4 $end
$scope module ATI1 $end
$var wire 32 I# DIn [31:0] $end
$var wire 16 J# Sum [15:0] $end
$var wire 16 K# Sum_ [15:0] $end
$var wire 1 _ clk $end
$var wire 1 ` en $end
$var wire 16 L# subLevelSum1 [15:0] $end
$var wire 16 M# subLevelSum2 [15:0] $end
$scope module aS $end
$var wire 16 N# In1 [15:0] $end
$var wire 16 O# In2 [15:0] $end
$var wire 1 P# IsSameSign $end
$var wire 1 Q# IsSignChanged $end
$var wire 16 R# Out [15:0] $end
$var wire 16 S# TestAdd [15:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$scope module RoW $end
$var wire 1 _ clk $end
$var wire 1 ` en $end
$var wire 16 T# in [15:0] $end
$var wire 16 U# out [15:0] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin genblk1 $end
$upscope $end
$scope begin genblk3 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module round_acc $end
$var wire 16 V# in [15:0] $end
$var wire 16 W# out [15:0] $end
$scope begin genblk4 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin foldLoop[0] $end
$scope module aS $end
$var wire 8 X# In1 [7:0] $end
$var wire 8 Y# In2 [7:0] $end
$var wire 1 Z# IsSameSign $end
$var wire 1 [# IsSignChanged $end
$var wire 9 \# Out [8:0] $end
$var wire 9 ]# TestAdd [8:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin foldLoop[1] $end
$scope module aS $end
$var wire 8 ^# In1 [7:0] $end
$var wire 8 _# In2 [7:0] $end
$var wire 1 `# IsSameSign $end
$var wire 1 a# IsSignChanged $end
$var wire 9 b# Out [8:0] $end
$var wire 9 c# TestAdd [8:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin foldLoop[2] $end
$scope module aS $end
$var wire 8 d# In1 [7:0] $end
$var wire 8 e# In2 [7:0] $end
$var wire 1 f# IsSameSign $end
$var wire 1 g# IsSignChanged $end
$var wire 9 h# Out [8:0] $end
$var wire 9 i# TestAdd [8:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin foldLoop[3] $end
$scope module aS $end
$var wire 8 j# In1 [7:0] $end
$var wire 8 k# In2 [7:0] $end
$var wire 1 l# IsSameSign $end
$var wire 1 m# IsSignChanged $end
$var wire 9 n# Out [8:0] $end
$var wire 9 o# TestAdd [8:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin foldLoop[4] $end
$scope module aS $end
$var wire 8 p# In1 [7:0] $end
$var wire 8 q# In2 [7:0] $end
$var wire 1 r# IsSameSign $end
$var wire 1 s# IsSignChanged $end
$var wire 9 t# Out [8:0] $end
$var wire 9 u# TestAdd [8:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin foldLoop[5] $end
$scope module aS $end
$var wire 8 v# In1 [7:0] $end
$var wire 8 w# In2 [7:0] $end
$var wire 1 x# IsSameSign $end
$var wire 1 y# IsSignChanged $end
$var wire 9 z# Out [8:0] $end
$var wire 9 {# TestAdd [8:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin foldLoop[6] $end
$scope module aS $end
$var wire 8 |# In1 [7:0] $end
$var wire 8 }# In2 [7:0] $end
$var wire 1 ~# IsSameSign $end
$var wire 1 !$ IsSignChanged $end
$var wire 9 "$ Out [8:0] $end
$var wire 9 #$ TestAdd [8:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope begin foldLoop[7] $end
$scope module aS $end
$var wire 8 $$ In1 [7:0] $end
$var wire 8 %$ In2 [7:0] $end
$var wire 1 &$ IsSameSign $end
$var wire 1 '$ IsSignChanged $end
$var wire 9 ($ Out [8:0] $end
$var wire 9 )$ TestAdd [8:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module TB1 $end
$var wire 8 *$ AA [7:0] $end
$var wire 8 +$ BB [7:0] $end
$var wire 9 ,$ CC [8:0] $end
$var wire 1 -$ ZZZ $end
$var wire 15 .$ satOut [14:0] $end
$var reg 1 /$ clk_ $end
$var integer 32 0$ counter [31:0] $end
$scope module Mul $end
$var wire 7 1$ In1 [6:0] $end
$var wire 7 2$ In2 [6:0] $end
$var wire 8 3$ Out [7:0] $end
$var wire 13 4$ Out_ [12:0] $end
$scope module roun $end
$var wire 13 5$ in [12:0] $end
$var wire 8 6$ out [7:0] $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope begin genblk2 $end
$var wire 7 7$ In1_s [6:0] $end
$var wire 7 8$ In2_s [6:0] $end
$var wire 13 9$ Out_s [12:0] $end
$upscope $end
$upscope $end
$scope module Muluns $end
$var wire 8 :$ In1 [7:0] $end
$var wire 8 ;$ In2 [7:0] $end
$var wire 8 <$ Out [7:0] $end
$var wire 16 =$ Out_ [15:0] $end
$scope module roun $end
$var wire 16 >$ in [15:0] $end
$var wire 8 ?$ out [7:0] $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope module Adder $end
$var wire 8 @$ In1 [7:0] $end
$var wire 8 A$ In2 [7:0] $end
$var wire 1 B$ IsSameSign $end
$var wire 1 C$ IsSignChanged $end
$var wire 8 D$ Out [7:0] $end
$var wire 8 E$ TestAdd [7:0] $end
$scope begin genblk4 $end
$scope begin genblk5 $end
$upscope $end
$upscope $end
$upscope $end
$scope module AdderuS $end
$var wire 8 F$ In1 [7:0] $end
$var wire 8 G$ In2 [7:0] $end
$var wire 1 H$ IsSameSign $end
$var wire 1 I$ IsSignChanged $end
$var wire 8 J$ Out [7:0] $end
$var wire 8 K$ TestAdd [7:0] $end
$scope begin genblk1 $end
$var wire 8 L$ In2_ [7:0] $end
$scope begin genblk2 $end
$upscope $end
$upscope $end
$upscope $end
$scope module sat $end
$var wire 15 M$ dataIn [14:0] $end
$var wire 15 N$ dataOut [14:0] $end
$var wire 1 O$ sign $end
$scope begin genblk2 $end
$var wire 15 P$ Out [14:0] $end
$var wire 3 Q$ Out_ [2:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b101 Q$
b111111111111101 P$
1O$
b111111111111101 N$
b111111110011100 M$
b1 L$
b0 K$
b0 J$
1I$
0H$
b1 G$
b11111111 F$
b0 E$
b0 D$
0C$
0B$
b10000001 A$
b1111111 @$
b1000000 ?$
b100000000000000 >$
b100000000000000 =$
b1000000 <$
b10000000 ;$
b10000000 :$
b111110000001 9$
b1000001 8$
b1000001 7$
b1111100 6$
b111110000001 5$
b111110000001 4$
b1111100 3$
b1000001 2$
b1000001 1$
b11111111111111111111111110011100 0$
0/$
b111111111111101 .$
0-$
b100000001 ,$
b11111111 +$
b0 *$
bx )$
bx ($
x'$
x&$
bz %$
bz $$
bx #$
bx "$
x!$
x~#
bz }#
bz |#
bx {#
bx z#
xy#
xx#
bz w#
bz v#
bx u#
bx t#
xs#
xr#
bz q#
bz p#
bx o#
bx n#
xm#
xl#
bz k#
bz j#
bx i#
bx h#
xg#
xf#
bz e#
bz d#
bx c#
bx b#
xa#
x`#
bz _#
bz ^#
bx ]#
bx \#
x[#
xZ#
bz Y#
bz X#
bx W#
bx V#
bx U#
bx T#
bx S#
bx R#
xQ#
xP#
bx O#
bx N#
bx M#
bx L#
bx K#
bx J#
bx I#
bx H#
bx G#
bx F#
bx E#
xD#
xC#
bx B#
bx A#
bx @#
bx ?#
bx >#
bx =#
bx <#
bx ;#
bx :#
bx 9#
bx 8#
x7#
x6#
bx 5#
bx 4#
bx 3#
bx 2#
bx 1#
bx 0#
bx /#
bx .#
bx -#
bx ,#
bx +#
x*#
x)#
bx (#
bx '#
bx &#
bx %#
bx $#
bx ##
bx "#
bx !#
bx ~"
bx }"
bx |"
x{"
xz"
bx y"
bx x"
bx w"
bx v"
bx u"
bx t"
bx s"
bx r"
bx q"
bx p"
bx o"
xn"
xm"
bx l"
bx k"
bx j"
bx i"
bx h"
bx g"
bx f"
bx e"
bx d"
bx c"
bx b"
xa"
x`"
bx _"
bx ^"
bx ]"
bx \"
bx ["
bx Z"
bx Y"
bx X"
bx W"
bx V"
bz U"
bx T"
bx S"
bx R"
bx Q"
bx P"
bz O"
bx N"
bx M"
bz L"
bx K"
bx J"
bx I"
bx H"
bx G"
bz F"
bx E"
bx D"
bz C"
bx B"
bx A"
bx @"
bx ?"
bx >"
bz ="
bx <"
bx ;"
bz :"
bx 9"
bx 8"
bx 7"
bx 6"
bx 5"
bz 4"
bx 3"
bx 2"
bz 1"
bx 0"
bx /"
bx ."
bx -"
bx ,"
bz +"
bx *"
bx )"
bz ("
bx '"
bx &"
bx %"
bx $"
bx #"
bz ""
bx !"
bx ~
bz }
bx |
bx {
bx z
bx y
bx x
bz w
bx v
bx u
bz t
bx s
bx r
bx q
bx p
bx o
bz n
bx m
bx l
bz k
bx j
bx i
bx h
bx g
bx f
bz e
bx d
bx c
bx b
xa
z`
z_
bx ^
bx ]
bx \
bz [
bz Z
bx Y
bx X
bx W
bx V
xU
xT
bx S
bx R
bx Q
bx P
bx O
bz N
bz M
bx L
bx K
bx J
bx I
bz H
bz G
bx F
bx E
bx D
zC
zB
bx A
bx @
bz ?
bz >
bx =
bx <
x;
x:
bx 9
bx 8
bx 7
bx 6
x5
x4
bx 3
bx 2
bx 1
bx 0
x/
x.
bx -
bx ,
bx +
bx *
x)
x(
bx '
bx &
bx %
bz $
bz #
bx "
bz !
$end
#2
b111111110011101 M$
b11111111111111111111111110011101 0$
1/$
#4
0/$
#6
b111111110011110 M$
b11111111111111111111111110011110 0$
1/$
#8
0/$
#10
b111111110011111 M$
b11111111111111111111111110011111 0$
1/$
#12
0/$
#14
b111111110100000 M$
b11111111111111111111111110100000 0$
1/$
#16
0/$
#18
b111111110100001 M$
b11111111111111111111111110100001 0$
1/$
#20
0/$
#22
b111111110100010 M$
b11111111111111111111111110100010 0$
1/$
#24
0/$
#26
b111111110100011 M$
b11111111111111111111111110100011 0$
1/$
#28
0/$
#30
b111111110100100 M$
b11111111111111111111111110100100 0$
1/$
#32
0/$
#34
b111111110100101 M$
b11111111111111111111111110100101 0$
1/$
#36
0/$
#38
b111111110100110 M$
b11111111111111111111111110100110 0$
1/$
#40
0/$
#42
b111111110100111 M$
b11111111111111111111111110100111 0$
1/$
#44
0/$
#46
b111111110101000 M$
b11111111111111111111111110101000 0$
1/$
#48
0/$
#50
b111111110101001 M$
b11111111111111111111111110101001 0$
1/$
#52
0/$
#54
b111111110101010 M$
b11111111111111111111111110101010 0$
1/$
#56
0/$
#58
b111111110101011 M$
b11111111111111111111111110101011 0$
1/$
#60
0/$
#62
b111111110101100 M$
b11111111111111111111111110101100 0$
1/$
#64
0/$
#66
b111111110101101 M$
b11111111111111111111111110101101 0$
1/$
#68
0/$
#70
b111111110101110 M$
b11111111111111111111111110101110 0$
1/$
#72
0/$
#74
b111111110101111 M$
b11111111111111111111111110101111 0$
1/$
#76
0/$
#78
b111111110110000 M$
b11111111111111111111111110110000 0$
1/$
#80
0/$
#82
b111111110110001 M$
b11111111111111111111111110110001 0$
1/$
#84
0/$
#86
b111111110110010 M$
b11111111111111111111111110110010 0$
1/$
#88
0/$
#90
b111111110110011 M$
b11111111111111111111111110110011 0$
1/$
#92
0/$
#94
b111111110110100 M$
b11111111111111111111111110110100 0$
1/$
#96
0/$
#98
b111111110110101 M$
b11111111111111111111111110110101 0$
1/$
#100
0/$
#102
b111111110110110 M$
b11111111111111111111111110110110 0$
1/$
#104
0/$
#106
b111111110110111 M$
b11111111111111111111111110110111 0$
1/$
#108
0/$
#110
b111111110111000 M$
b11111111111111111111111110111000 0$
1/$
#112
0/$
#114
b111111110111001 M$
b11111111111111111111111110111001 0$
1/$
#116
0/$
#118
b111111110111010 M$
b11111111111111111111111110111010 0$
1/$
#120
0/$
#122
b111111110111011 M$
b11111111111111111111111110111011 0$
1/$
#124
0/$
#126
b111111110111100 M$
b11111111111111111111111110111100 0$
1/$
#128
0/$
#130
b111111110111101 M$
b11111111111111111111111110111101 0$
1/$
#132
0/$
#134
b111111110111110 M$
b11111111111111111111111110111110 0$
1/$
#136
0/$
#138
b111111110111111 M$
b11111111111111111111111110111111 0$
1/$
#140
0/$
#142
b111111111000000 M$
b11111111111111111111111111000000 0$
1/$
#144
0/$
#146
b111111111000001 M$
b11111111111111111111111111000001 0$
1/$
#148
0/$
#150
b111111111000010 M$
b11111111111111111111111111000010 0$
1/$
#152
0/$
#154
b111111111000011 M$
b11111111111111111111111111000011 0$
1/$
#156
0/$
#158
b111111111000100 M$
b11111111111111111111111111000100 0$
1/$
#160
0/$
#162
b111111111000101 M$
b11111111111111111111111111000101 0$
1/$
#164
0/$
#166
b111111111000110 M$
b11111111111111111111111111000110 0$
1/$
#168
0/$
#170
b111111111000111 M$
b11111111111111111111111111000111 0$
1/$
#172
0/$
#174
b111111111001000 M$
b11111111111111111111111111001000 0$
1/$
#176
0/$
#178
b111111111001001 M$
b11111111111111111111111111001001 0$
1/$
#180
0/$
#182
b111111111001010 M$
b11111111111111111111111111001010 0$
1/$
#184
0/$
#186
b111111111001011 M$
b11111111111111111111111111001011 0$
1/$
#188
0/$
#190
b111111111001100 M$
b11111111111111111111111111001100 0$
1/$
#192
0/$
#194
b111111111001101 M$
b11111111111111111111111111001101 0$
1/$
#196
0/$
#198
b111111111001110 M$
b11111111111111111111111111001110 0$
1/$
#200
0/$
#202
b111111111001111 M$
b11111111111111111111111111001111 0$
1/$
#204
0/$
#206
b111111111010000 M$
b11111111111111111111111111010000 0$
1/$
#208
0/$
#210
b111111111010001 M$
b11111111111111111111111111010001 0$
1/$
#212
0/$
#214
b111111111010010 M$
b11111111111111111111111111010010 0$
1/$
#216
0/$
#218
b111111111010011 M$
b11111111111111111111111111010011 0$
1/$
#220
0/$
#222
b111111111010100 M$
b11111111111111111111111111010100 0$
1/$
#224
0/$
#226
b111111111010101 M$
b11111111111111111111111111010101 0$
1/$
#228
0/$
#230
b111111111010110 M$
b11111111111111111111111111010110 0$
1/$
#232
0/$
#234
b111111111010111 M$
b11111111111111111111111111010111 0$
1/$
#236
0/$
#238
b111111111011000 M$
b11111111111111111111111111011000 0$
1/$
#240
0/$
#242
b111111111011001 M$
b11111111111111111111111111011001 0$
1/$
#244
0/$
#246
b111111111011010 M$
b11111111111111111111111111011010 0$
1/$
#248
0/$
#250
b111111111011011 M$
b11111111111111111111111111011011 0$
1/$
#252
0/$
#254
b111111111011100 M$
b11111111111111111111111111011100 0$
1/$
#256
0/$
#258
b111111111011101 M$
b11111111111111111111111111011101 0$
1/$
#260
0/$
#262
b111111111011110 M$
b11111111111111111111111111011110 0$
1/$
#264
0/$
#266
b111111111011111 M$
b11111111111111111111111111011111 0$
1/$
#268
0/$
#270
b111111111100000 M$
b11111111111111111111111111100000 0$
1/$
#272
0/$
#274
b111111111100001 M$
b11111111111111111111111111100001 0$
1/$
#276
0/$
#278
b111111111100010 M$
b11111111111111111111111111100010 0$
1/$
#280
0/$
#282
b111111111100011 M$
b11111111111111111111111111100011 0$
1/$
#284
0/$
#286
b111111111100100 M$
b11111111111111111111111111100100 0$
1/$
#288
0/$
#290
b111111111100101 M$
b11111111111111111111111111100101 0$
1/$
#292
0/$
#294
b111111111100110 M$
b11111111111111111111111111100110 0$
1/$
#296
0/$
#298
b111111111100111 M$
b11111111111111111111111111100111 0$
1/$
#300
0/$
#302
b111111111101000 M$
b11111111111111111111111111101000 0$
1/$
#304
0/$
#306
b111111111101001 M$
b11111111111111111111111111101001 0$
1/$
#308
0/$
#310
b111111111101010 M$
b11111111111111111111111111101010 0$
1/$
#312
0/$
#314
b111111111101011 M$
b11111111111111111111111111101011 0$
1/$
#316
0/$
#318
b111111111101100 M$
b11111111111111111111111111101100 0$
1/$
#320
0/$
#322
b111111111101101 M$
b11111111111111111111111111101101 0$
1/$
#324
0/$
#326
b111111111101110 M$
b11111111111111111111111111101110 0$
1/$
#328
0/$
#330
b111111111101111 M$
b11111111111111111111111111101111 0$
1/$
#332
0/$
#334
b111111111110000 M$
b11111111111111111111111111110000 0$
1/$
#336
0/$
#338
b111111111110001 M$
b11111111111111111111111111110001 0$
1/$
#340
0/$
#342
b111111111110010 M$
b11111111111111111111111111110010 0$
1/$
#344
0/$
#346
b111111111110011 M$
b11111111111111111111111111110011 0$
1/$
#348
0/$
#350
b111111111110100 M$
b11111111111111111111111111110100 0$
1/$
#352
0/$
#354
b111111111110101 M$
b11111111111111111111111111110101 0$
1/$
#356
0/$
#358
b111111111110110 M$
b11111111111111111111111111110110 0$
1/$
#360
0/$
#362
b111111111110111 M$
b11111111111111111111111111110111 0$
1/$
#364
0/$
#366
b111111111111000 M$
b11111111111111111111111111111000 0$
1/$
#368
0/$
#370
b111111111111001 M$
b11111111111111111111111111111001 0$
1/$
#372
0/$
#374
b111111111111010 M$
b11111111111111111111111111111010 0$
1/$
#376
0/$
#378
b111111111111011 M$
b11111111111111111111111111111011 0$
1/$
#380
0/$
#382
b111111111111100 M$
b11111111111111111111111111111100 0$
1/$
#384
0/$
#386
b111111111111101 M$
b11111111111111111111111111111101 0$
1/$
#388
0/$
#390
b110 Q$
b111111111111110 P$
b111111111111110 .$
b111111111111110 N$
b111111111111110 M$
b11111111111111111111111111111110 0$
1/$
#392
0/$
#394
b111 Q$
b111111111111111 P$
b111111111111111 .$
b111111111111111 N$
b111111111111111 M$
b11111111111111111111111111111111 0$
1/$
#396
0/$
#398
b0 Q$
b0 P$
b0 .$
b0 N$
0O$
b0 M$
b0 0$
1/$
#400
0/$
#402
b1 Q$
b1 P$
b1 .$
b1 N$
b1 M$
b1 0$
1/$
#404
0/$
#406
b10 Q$
b10 P$
b10 .$
b10 N$
b10 M$
b10 0$
1/$
#408
0/$
#410
b11 Q$
b11 P$
b11 .$
b11 N$
b11 M$
b11 0$
1/$
#412
0/$
#414
b100 M$
b100 0$
1/$
#416
0/$
#418
b101 M$
b101 0$
1/$
#420
0/$
#422
b110 M$
b110 0$
1/$
#424
0/$
#426
b111 M$
b111 0$
1/$
#428
0/$
#430
b1000 M$
b1000 0$
1/$
#432
0/$
#434
b1001 M$
b1001 0$
1/$
#436
0/$
#438
b1010 M$
b1010 0$
1/$
#440
0/$
#442
b1011 M$
b1011 0$
1/$
#444
0/$
#446
b1100 M$
b1100 0$
1/$
#448
0/$
#450
b1101 M$
b1101 0$
1/$
#452
0/$
#454
b1110 M$
b1110 0$
1/$
#456
0/$
#458
b1111 M$
b1111 0$
1/$
#460
0/$
#462
b10000 M$
b10000 0$
1/$
#464
0/$
#466
b10001 M$
b10001 0$
1/$
#468
0/$
#470
b10010 M$
b10010 0$
1/$
#472
0/$
#474
b10011 M$
b10011 0$
1/$
#476
0/$
#478
b10100 M$
b10100 0$
1/$
#480
0/$
#482
b10101 M$
b10101 0$
1/$
#484
0/$
#486
b10110 M$
b10110 0$
1/$
#488
0/$
#490
b10111 M$
b10111 0$
1/$
#492
0/$
#494
b11000 M$
b11000 0$
1/$
#496
0/$
#498
b11001 M$
b11001 0$
1/$
#500
0/$
#502
b11010 M$
b11010 0$
1/$
#504
0/$
#506
b11011 M$
b11011 0$
1/$
#508
0/$
#510
b11100 M$
b11100 0$
1/$
#512
0/$
#514
b11101 M$
b11101 0$
1/$
#516
0/$
#518
b11110 M$
b11110 0$
1/$
#520
0/$
#522
b11111 M$
b11111 0$
1/$
#524
0/$
#526
b100000 M$
b100000 0$
1/$
#528
0/$
#530
b100001 M$
b100001 0$
1/$
#532
0/$
#534
b100010 M$
b100010 0$
1/$
#536
0/$
#538
b100011 M$
b100011 0$
1/$
#540
0/$
#542
b100100 M$
b100100 0$
1/$
#544
0/$
#546
b100101 M$
b100101 0$
1/$
#548
0/$
#550
b100110 M$
b100110 0$
1/$
#552
0/$
#554
b100111 M$
b100111 0$
1/$
#556
0/$
#558
b101000 M$
b101000 0$
1/$
#560
0/$
#562
b101001 M$
b101001 0$
1/$
#564
0/$
#566
b101010 M$
b101010 0$
1/$
#568
0/$
#570
b101011 M$
b101011 0$
1/$
#572
0/$
#574
b101100 M$
b101100 0$
1/$
#576
0/$
#578
b101101 M$
b101101 0$
1/$
#580
0/$
#582
b101110 M$
b101110 0$
1/$
#584
0/$
#586
b101111 M$
b101111 0$
1/$
#588
0/$
#590
b110000 M$
b110000 0$
1/$
#592
0/$
#594
b110001 M$
b110001 0$
1/$
#596
0/$
#598
b110010 M$
b110010 0$
1/$
#600
0/$
#602
b110011 M$
b110011 0$
1/$
#604
0/$
#606
b110100 M$
b110100 0$
1/$
#608
0/$
#610
b110101 M$
b110101 0$
1/$
#612
0/$
#614
b110110 M$
b110110 0$
1/$
#616
0/$
#618
b110111 M$
b110111 0$
1/$
#620
0/$
#622
b111000 M$
b111000 0$
1/$
#624
0/$
#626
b111001 M$
b111001 0$
1/$
#628
0/$
#630
b111010 M$
b111010 0$
1/$
#632
0/$
#634
b111011 M$
b111011 0$
1/$
#636
0/$
#638
b111100 M$
b111100 0$
1/$
#640
0/$
#642
b111101 M$
b111101 0$
1/$
#644
0/$
#646
b111110 M$
b111110 0$
1/$
#648
0/$
#650
b111111 M$
b111111 0$
1/$
#652
0/$
#654
b1000000 M$
b1000000 0$
1/$
#656
0/$
#658
b1000001 M$
b1000001 0$
1/$
#660
0/$
#662
b1000010 M$
b1000010 0$
1/$
#664
0/$
#666
b1000011 M$
b1000011 0$
1/$
#668
0/$
#670
b1000100 M$
b1000100 0$
1/$
#672
0/$
#674
b1000101 M$
b1000101 0$
1/$
#676
0/$
#678
b1000110 M$
b1000110 0$
1/$
#680
0/$
#682
b1000111 M$
b1000111 0$
1/$
#684
0/$
#686
b1001000 M$
b1001000 0$
1/$
#688
0/$
#690
b1001001 M$
b1001001 0$
1/$
#692
0/$
#694
b1001010 M$
b1001010 0$
1/$
#696
0/$
#698
b1001011 M$
b1001011 0$
1/$
#700
0/$
#702
b1001100 M$
b1001100 0$
1/$
#704
0/$
#706
b1001101 M$
b1001101 0$
1/$
#708
0/$
#710
b1001110 M$
b1001110 0$
1/$
#712
0/$
#714
b1001111 M$
b1001111 0$
1/$
#716
0/$
#718
b1010000 M$
b1010000 0$
1/$
#720
0/$
#722
b1010001 M$
b1010001 0$
1/$
#724
0/$
#726
b1010010 M$
b1010010 0$
1/$
#728
0/$
#730
b1010011 M$
b1010011 0$
1/$
#732
0/$
#734
b1010100 M$
b1010100 0$
1/$
#736
0/$
#738
b1010101 M$
b1010101 0$
1/$
#740
0/$
#742
b1010110 M$
b1010110 0$
1/$
#744
0/$
#746
b1010111 M$
b1010111 0$
1/$
#748
0/$
#750
b1011000 M$
b1011000 0$
1/$
#752
0/$
#754
b1011001 M$
b1011001 0$
1/$
#756
0/$
#758
b1011010 M$
b1011010 0$
1/$
#760
0/$
#762
b1011011 M$
b1011011 0$
1/$
#764
0/$
#766
b1011100 M$
b1011100 0$
1/$
#768
0/$
#770
b1011101 M$
b1011101 0$
1/$
#772
0/$
#774
b1011110 M$
b1011110 0$
1/$
#776
0/$
#778
b1011111 M$
b1011111 0$
1/$
#780
0/$
#782
b1100000 M$
b1100000 0$
1/$
#784
0/$
#786
b1100001 M$
b1100001 0$
1/$
#788
0/$
#790
b1100010 M$
b1100010 0$
1/$
#792
0/$
#794
b1100011 M$
b1100011 0$
1/$
#796
0/$
#798
b1100100 M$
b1100100 0$
1/$
#800
0/$
#802
b1100101 M$
b1100101 0$
1/$
#804
0/$
#806
b1100110 M$
b1100110 0$
1/$
#808
0/$
#810
b1100111 M$
b1100111 0$
1/$
#812
0/$
#814
b1101000 M$
b1101000 0$
1/$
#816
0/$
#818
b1101001 M$
b1101001 0$
1/$
#820
0/$
#822
b1101010 M$
b1101010 0$
1/$
#824
0/$
#826
b1101011 M$
b1101011 0$
1/$
#828
0/$
#830
b1101100 M$
b1101100 0$
1/$
#832
0/$
#834
b1101101 M$
b1101101 0$
1/$
#836
0/$
#838
b1101110 M$
b1101110 0$
1/$
#840
0/$
#842
b1101111 M$
b1101111 0$
1/$
#844
0/$
#846
b1110000 M$
b1110000 0$
1/$
#848
0/$
#850
b1110001 M$
b1110001 0$
1/$
#852
0/$
#854
b1110010 M$
b1110010 0$
1/$
#856
0/$
#858
b1110011 M$
b1110011 0$
1/$
#860
0/$
#862
b1110100 M$
b1110100 0$
1/$
#864
0/$
#866
b1110101 M$
b1110101 0$
1/$
#868
0/$
#870
b1110110 M$
b1110110 0$
1/$
#872
0/$
#874
b1110111 M$
b1110111 0$
1/$
#876
0/$
#878
b1111000 M$
b1111000 0$
1/$
#880
0/$
#882
b1111001 M$
b1111001 0$
1/$
#884
0/$
#886
b1111010 M$
b1111010 0$
1/$
#888
0/$
#890
b1111011 M$
b1111011 0$
1/$
#892
0/$
#894
b1111100 M$
b1111100 0$
1/$
#896
0/$
#898
b1111101 M$
b1111101 0$
1/$
#900
0/$
#902
b1111110 M$
b1111110 0$
1/$
#904
0/$
#906
b1111111 M$
b1111111 0$
1/$
#908
0/$
#910
b10000000 M$
b10000000 0$
1/$
#912
0/$
#914
b10000001 M$
b10000001 0$
1/$
#916
0/$
#918
b10000010 M$
b10000010 0$
1/$
#920
0/$
#922
b10000011 M$
b10000011 0$
1/$
#924
0/$
#926
b10000100 M$
b10000100 0$
1/$
#928
0/$
#930
b10000101 M$
b10000101 0$
1/$
#932
0/$
#934
b10000110 M$
b10000110 0$
1/$
#936
0/$
#938
b10000111 M$
b10000111 0$
1/$
#940
0/$
#942
b10001000 M$
b10001000 0$
1/$
#944
0/$
#946
b10001001 M$
b10001001 0$
1/$
#948
0/$
#950
b10001010 M$
b10001010 0$
1/$
#952
0/$
#954
b10001011 M$
b10001011 0$
1/$
#956
0/$
#958
b10001100 M$
b10001100 0$
1/$
#960
0/$
#962
b10001101 M$
b10001101 0$
1/$
#964
0/$
#966
b10001110 M$
b10001110 0$
1/$
#968
0/$
#970
b10001111 M$
b10001111 0$
1/$
#972
0/$
#974
b10010000 M$
b10010000 0$
1/$
#976
0/$
#978
b10010001 M$
b10010001 0$
1/$
#980
0/$
#982
b10010010 M$
b10010010 0$
1/$
#984
0/$
#986
b10010011 M$
b10010011 0$
1/$
#988
0/$
#990
b10010100 M$
b10010100 0$
1/$
#992
0/$
#994
b10010101 M$
b10010101 0$
1/$
#996
0/$
#998
b10010110 M$
b10010110 0$
1/$
#1000
0/$
#1002
b10010111 M$
b10010111 0$
1/$
#1004
0/$
#1006
b10011000 M$
b10011000 0$
1/$
#1008
0/$
#1010
b10011001 M$
b10011001 0$
1/$
#1012
0/$
#1014
b10011010 M$
b10011010 0$
1/$
#1016
0/$
#1018
b10011011 M$
b10011011 0$
1/$
#1020
0/$
#1022
b10011100 M$
b10011100 0$
1/$
#1024
0/$
